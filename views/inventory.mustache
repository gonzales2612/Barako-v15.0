<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>

    <title>Inventory Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: #EBD9C1;
            color: #333;
        }

        .admin-container {
            width: 80%;
            margin: 50px auto;
            padding: 20px;
            background-color: rgb(116 79 54 / var(--tw-bg-opacity, 1));
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .admin-container h1 {
            text-align: center;
            color: white;
            font-size: 2.5em;
            margin-bottom: 20px;
        }

        .inventory-table {
            width: 100%;
            margin-top: 20px;
        }

        .inventory-table table {
            width: 100%;
            border-collapse: collapse;
        }

        .inventory-table th, .inventory-table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #f0dcc4;
            color: #f0dcc4;
        }

        .inventory-table th {
            background-color: #5a3d29;
            color: #f0dcc4;
        }

        .inventory-table tr:hover {
            background-color: #4e3122;
        }

        .inventory-table .edit-btn, .inventory-table .delete-btn, .add-btn {
            padding: 5px 10px;
            background-color: #5a3d29;
            color: #EBD9C1;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-right: 5px;
        }

        .inventory-table .edit-btn:hover, .inventory-table .delete-btn:hover, .add-btn:hover {
            background-color: #4a2f1a;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: rgb(116 79 54 / var(--tw-bg-opacity, 1));
            padding: 20px;
            border-radius: 8px;
            width: 400px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 20px;
            cursor: pointer;
            font-size: 1.5rem;
            color: #5a3d29;
        }

        .form-group {
            margin-bottom: 15px;
            text-align: left;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #f0dcc4;
        }

        .input-field {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .save-btn {
            background-color: #4e3122;
            color: #EBD9C1;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }

        .save-btn:hover {
            background-color: #4a2f1a;
        }

        .add-btn {
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<!-- Navigation Bar -->
<nav class="bg-primary shadow-md">
    <div class="container mx-auto flex justify-between items-center py-4 px-6">
        <a href="/"><img src="/assets/logo.png" class="h-12" alt="Logo"></a>
        <ul class="hidden md:flex space-x-6">
            <li><a href="/admin" class="text-accent hover:underline">Home</a></li>
            <li><a href="/orders" class="text-accent hover:underline">Orders</a></li>
            <li><a href="/admin/inventory" class="text-accent hover:underline">Inventory</a></li>
        </ul>
        <div class="flex space-x-4">
            {{#username}}
                <span class="text-white">Welcome, <strong>{{username}}</strong></span>
                <a href="admin?logout=true" class="bg-red-500 text-white py-1 px-4 rounded hover:bg-red-600 transition">Logout</a>
            {{/username}}
            {{^username}}
                <a href="/login" class="px-6 py-2 border border-white bg-white text-primary rounded-full hover:bg-primary hover:text-white transition">Login</a>
            {{/username}}
        </div>
    </div>
</nav>

<div class="admin-container">
    <h1>Inventory Management</h1>
    
    <div class="inventory-table">
        <button class="add-btn" onclick="openAddModal()">Add New Item</button>

        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Price</th>
                    <th>Image</th>
                    <th>Category ID</th>
                    <th>Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#inventory}}
                <tr data-id="{{Id}}">
                    <td>{{Id}}</td>
                    <td>{{Name}}</td>
                    <td>{{Type}}</td>
                    <td>{{Price}}</td>
                    <td><img src="{{Image}}" alt="{{Name}}" style="width: 50px; height: 50px;"></td>
                    <td>{{category_id}}</td>
                    <td>{{quantity}}</td>
                    <td>
                        <button class="edit-btn" onclick="openEditModal({{Id}}, '{{Name}}', '{{Type}}', {{Price}}, '{{Image}}', {{category_id}}, {{quantity}})">Edit</button>
                        <button class="delete-btn" onclick="confirmDelete({{Id}})">Delete</button>
                    </td>
                </tr>
                {{/inventory}}
            </tbody>
        </table>
    </div>
</div>

<!-- Add Modal -->
<div id="addModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close-btn" onclick="closeAddModal()">&times;</span>
        <h2>Add New Menu Item</h2>
        <form id="addForm">
            <div class="form-group">
                <label for="addName">Name:</label>
                <input type="text" id="addName" name="name" class="input-field" required>
            </div>
            <div class="form-group">
                <label for="addType">Type:</label>
                <input type="text" id="addType" name="type" class="input-field" required>
            </div>
            <div class="form-group">
                <label for="addPrice">Price:</label>
                <input type="number" id="addPrice" name="price" class="input-field" step="0.01" required>
            </div>
            <div class="form-group">
                <label for="addImage">Image URL:</label>
                <input type="text" id="addImage" name="image" class="input-field">
            </div>
            <div class="form-group">
                <label for="addCategoryId">Category ID:</label>
                <input type="number" id="addCategoryId" name="category_id" class="input-field">
            </div>
            <div class="form-group">
                <label for="addQuantity">Quantity:</label>
                <input type="number" id="addQuantity" name="quantity" class="input-field" required>
            </div>
            <button type="submit" class="save-btn">Add Item</button>
        </form>
    </div>
</div>

<!-- Edit Modal -->
<div id="editModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close-btn" onclick="closeEditModal()">&times;</span>
        <h2>Edit Menu Item</h2>
        <form id="editForm">
            <input type="hidden" id="editId" name="id">
            <div class="form-group">
                <label for="editName">Name:</label>
                <input type="text" id="editName" name="name" class="input-field" required>
            </div>
            <div class="form-group">
                <label for="editType">Type:</label>
                <input type="text" id="editType" name="type" class="input-field" required>
            </div>
            <div class="form-group">
                <label for="editPrice">Price:</label>
                <input type="number" id="editPrice" name="price" class="input-field" step="0.01" required>
            </div>
            <div class="form-group">
                <label for="editImage">Image URL:</label>
                <input type="text" id="editImage" name="image" class="input-field">
            </div>
            <div class="form-group">
                <label for="editCategoryId">Category ID:</label>
                <input type="number" id="editCategoryId" name="category_id" class="input-field">
            </div>
            <div class="form-group">
                <label for="editQuantity">Quantity:</label>
                <input type="number" id="editQuantity" name="quantity" class="input-field" required>
            </div>
            <button type="submit" class="save-btn">Save Changes</button>
        </form>
    </div>
</div>

<!-- Delete Modal -->
<div id="deleteModal" class="modal" style="display: none;">
    <div class="modal-content">
        <span class="close-btn" onclick="closeDeleteModal()">&times;</span>
        <h2>Confirm Deletion</h2>
        <p>Are you sure you want to delete this item?</p>
        <form id="deleteForm">
            <input type="hidden" id="deleteId" name="id">
            <button type="submit" class="save-btn">Confirm</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const addModal = document.getElementById("addModal");
        const deleteModal = document.getElementById("deleteModal");

        const addForm = document.getElementById("addForm");
        const deleteForm = document.getElementById("deleteForm");

        const editModal = document.getElementById("editModal");
        const editForm = document.getElementById("editForm");

        // Add Modal
        window.openAddModal = () => {
            addModal.style.display = "flex";
        };
        window.closeAddModal = () => {
            addModal.style.display = "none";
        };

        addForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const formData = new FormData(addForm);
            fetch("/admin/inventory/add", { method: "POST", body: formData })
                .then((response) => response.json())
                .then((data) => {
                    alert(data.message || "Item added successfully!");
                    location.reload();
                });
        });

        // Edit Modal
        window.openEditModal = (id, name, type, price, image, categoryId, quantity) => {
            document.getElementById("editId").value = id;
            document.getElementById("editName").value = name;
            document.getElementById("editType").value = type;
            document.getElementById("editPrice").value = price;
            document.getElementById("editImage").value = image;
            document.getElementById("editCategoryId").value = categoryId;
            document.getElementById("editQuantity").value = quantity;
            editModal.style.display = "flex";
        };

        window.closeEditModal = () => {
            editModal.style.display = "none";
        };

        editForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const formData = new FormData(editForm);
            fetch("/admin/inventory/update", {
    method: "POST",
    body: formData,
})
    .then((response) => {
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.text(); // Read the raw text
    })
    .then((text) => {
        try {
            const data = JSON.parse(text); // Try to parse the JSON
            if (data.status === "success") {
                alert("Item updated successfully!");
                location.reload();
            } else {
                alert(data.message || "Failed to update item.");
            }
        } catch (error) {
            throw new Error(`Invalid JSON response: ${text}`);
        }
    })
    .catch((error) => {
        console.error("Error:", error);
        alert("An error occurred while processing the request.");
    });
        });

        // Delete Modal
        window.confirmDelete = (id) => {
            document.getElementById("deleteId").value = id;
            deleteModal.style.display = "flex";
        };
        window.closeDeleteModal = () => {
            deleteModal.style.display = "none";
        };

        deleteForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const formData = new FormData(deleteForm);
            fetch("/admin/inventory/delete", { method: "POST", body: formData })
                .then((response) => response.json())
                .then((data) => {
                    alert(data.message || "Item deleted successfully!");
                    location.reload();
                });
        });
    });
</script>

</body>
</html>
